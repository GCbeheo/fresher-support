name: Full CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # Prepare: Get Environment Variables for both frontend and backend
  get-env:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Get frontend environment variables
      run: echo "${{ secrets.FRONT_ENV_FILE }}" > frontend.env

    - name: Get backend environment variables
      run: echo "${{ secrets.BACKEND_ENV_FILE }}" > backend.env

    # Cache both environment files
    - name: Cache frontend environment file
      uses: actions/cache@v3
      with:
        path: frontend.env
        key: env-file-frontend

    - name: Cache backend environment file
      uses: actions/cache@v3
      with:
        path: backend.env
        key: env-file-backend

  # Cleanup (if needed)
  cleanup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cleanup unnecessary files
      run: sudo rm -r .git/

  # Test frontend environment file
  test-frontend-env:
    runs-on: ubuntu-latest
    needs: [get-env]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Verify frontend environment
      run: |
        ls -lah | grep frontend.env
        cat frontend.env

  # Test backend environment file
  test-backend-env:
    runs-on: ubuntu-latest
    needs: [get-env]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Verify backend environment
      run: |
        ls -lah | grep backend.env
        cat backend.env

  # Unit test for backend
  unit-test-backend:
    runs-on: ubuntu-latest
    needs: [test-backend-env]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      run: |
        sudo apt update
        sudo apt install python3-venv
        python3 -m venv myenv
        source myenv/bin/activate
        pip install -r requirements.txt
        pip install flask
        python test_app.py

  # Build Docker image for frontend
  build-frontend:
    runs-on: ubuntu-latest
    needs: [test-frontend-env]
    env:
      DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/the-last-straw-frontend
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Build frontend Docker image
      run: docker build -t $DOCKER_IMAGE:${{ github.sha }} .

    - name: List Docker images
      run: docker images

  # Build Docker image for backend
  build-backend:
    runs-on: ubuntu-latest
    needs: [unit-test-backend]
    env:
      DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/the-last-straw-backend
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Build backend Docker image
      run: docker build -t $DOCKER_IMAGE:${{ github.sha }} .

    - name: List Docker images
      run: docker images

  # Test frontend Docker image
  test-frontend-image:
    runs-on: ubuntu-latest
    needs: [build-frontend]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run frontend Docker container for test
      run: |
        docker run -dp 3000:3000 ${{ secrets.DOCKERHUB_USERNAME }}/the-last-straw-frontend:${{ github.sha }}
        docker ps | grep "3000"

  # Test backend Docker image
  test-backend-image:
    runs-on: ubuntu-latest
    needs: [build-backend]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run backend Docker container for test
      run: |
        docker run -dp 4000:4000 ${{ secrets.DOCKERHUB_USERNAME }}/the-last-straw-backend:${{ github.sha }}
        docker ps | grep "4000"

  # Push frontend Docker image to DockerHub
  push-frontend:
    runs-on: ubuntu-latest
    needs: [test-frontend-image]
    steps:
    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Push frontend Docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/the-last-straw-frontend:${{ github.sha }}

  # Push backend Docker image to DockerHub
  push-backend:
    runs-on: ubuntu-latest
    needs: [test-backend-image]
    steps:
    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Push backend Docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/the-last-straw-backend:${{ github.sha }}
