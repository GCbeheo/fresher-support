name: Build Pipeline with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  # Prepare: Get Environment Variables for both frontend and backend
  get-env:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Get frontend environment variables
      run: echo "${{ secrets.FRONT_ENV_FILE }}" > frontend/frontend.env

    - name: Get backend environment variables
      run: echo "${{ secrets.BACKEND_ENV_FILE }}" > backend/backend.env

    # Cache environment files
    - name: Cache frontend environment file
      uses: actions/cache@v3
      with:
        path: frontend/frontend.env
        key: env-file-frontend

    - name: Cache backend environment file
      uses: actions/cache@v3
      with:
        path: backend/backend.env
        key: env-file-backend

  # Build Docker Compose Services
  build:
    runs-on: ubuntu-latest
    needs: get-env
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    # # Build and run with Docker Compose
    # - name: Build services using Docker Compose
    #   run: docker-compose build

    - name: Build frontend image
      run: |
        cd ./frontend
        echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nextapp:${{ github.sha }} .


    - name: List Docker images
      run: docker images

  # # Push Docker images to DockerHub
  # push:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Log in to DockerHub
  #     run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

  #   # Push frontend image
  #   - name: Tag and push frontend image
  #     run: |
  #       docker tag nextapp:1.0.0 ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKER_IMAGE:${{ github.sha }}
  #       docker push ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKER_IMAGE:${{ github.sha }}

  #   # Push backend image
  #   - name: Tag and push backend image
  #     run: |
  #       docker tag flaskapp:1.0.0 ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:${{ github.sha }}
  #       docker push ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:${{ github.sha }}
